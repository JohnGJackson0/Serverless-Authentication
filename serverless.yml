service: authentication
frameworkVersion: '3'

custom:
  tableName: 'user-sessions-${sls:stage}'

provider:
  name: aws
  runtime: nodejs14.x
  environment:
    SESSION_TABLE_NAME: ${self:custom.tableName}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ SessionsTable, Arn ]

functions:
  create:
    handler: handler/createSession.createSession
    events:
      - http:
          path: create
          method: post
          cors: true
  update:
    handler: handler/authenticateSession.authenticateSession
    events:
      - http:
          path: auth
          method: put
          cors: true

resources:
  Resources:
    SessionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: sessionId
            AttributeType: S
        KeySchema:
          - AttributeName: sessionId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}